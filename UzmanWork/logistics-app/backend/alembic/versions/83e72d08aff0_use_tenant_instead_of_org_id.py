"""Use tenant instead of org id

Revision ID: 83e72d08aff0
Revises: 8b6243a5fe2b
Create Date: 2023-10-13 18:02:21.786949

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "83e72d08aff0"
down_revision = "8b6243a5fe2b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("kiosks", sa.Column("tenant", sa.String(), nullable=False))
    op.drop_constraint("kiosks_name_organization_id_key", "kiosks", type_="unique")
    op.create_unique_constraint("kiosks_name_tenant_key", "kiosks", ["name", "tenant"])
    op.drop_constraint("kiosks_organization_id_fkey", "kiosks", type_="foreignkey")
    op.create_foreign_key(
        "kiosks_organization_tenant_fkey",
        "kiosks",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.drop_column("kiosks", "organization_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "kiosks",
        sa.Column("organization_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("kiosks_organization_tenant_fkey", "kiosks", type_="foreignkey")
    op.create_foreign_key(
        "kiosks_organization_id_fkey",
        "kiosks",
        "organizations",
        ["organization_id"],
        ["id"],
    )
    op.drop_constraint("kiosks_name_tenant_key", "kiosks", type_="unique")
    op.create_unique_constraint(
        "kiosks_name_organization_id_key", "kiosks", ["name", "organization_id"]
    )
    op.drop_column("kiosks", "tenant")
    # ### end Alembic commands ###
