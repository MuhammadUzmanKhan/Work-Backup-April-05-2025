"""Adding columns to store comments and clip creator
Revision ID: 4fd42da9e92d
Revises: be2ce67ccf41
Create Date: 2023-10-19 21:57:11.986084
"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4fd42da9e92d"
down_revision = "be2ce67ccf41"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "archive_comments",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("archive_id", sa.Integer(), nullable=False),
        sa.Column("user_email", sa.String(), nullable=False),
        sa.Column("comment", sa.String(), nullable=False),
        sa.Column("creation_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["archive_id"], ["archives.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )

    op.add_column(
        "clips_to_archives", sa.Column("clip_creator_email", sa.String(), nullable=True)
    )

    op.execute(
        "UPDATE clips_to_archives SET clip_creator_email = 'unknown@unknown.com'"
    )
    op.alter_column("clips_to_archives", "clip_creator_email", nullable=False)

    op.drop_constraint(
        "clips_to_archives_pkey", "clips_to_archives", type_="primary", schema="public"
    )
    op.create_primary_key(
        "clips_to_archives_pkey",
        "clips_to_archives",
        ["clip_id", "archive_id", "clip_creator_email"],
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column("clips_to_archives", "clip_creator_email")

    op.drop_table("archive_comments")

    op.execute(
        "ALTER TABLE clips_to_archives DROP CONSTRAINT IF EXISTS clips_to_archives_pkey"
    )
    op.create_primary_key(
        "clips_to_archives_pkey", "clips_to_archives", ["clip_id", "archive_id"]
    )
    # ### end Alembic commands ###
