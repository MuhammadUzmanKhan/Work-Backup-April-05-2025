"""add tenant to almost all tables

Revision ID: 8a43a22167b3
Revises: 2b6a7c0cb402
Create Date: 2023-12-20 15:22:19.125903

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8a43a22167b3"
down_revision = "2b6a7c0cb402"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "archive_comments",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE archive_comments SET tenant = archives.tenant FROM archives
        WHERE archive_comments.archive_id = archives.id
        """
    )
    op.create_foreign_key(
        "archive_comments_tenant_fkey",
        "archive_comments",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "clips_data",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE clips_data SET tenant = cameras.tenant FROM cameras
        WHERE clips_data.mac_address = cameras.mac_address
        """
    )
    op.create_foreign_key(
        "clips_data_tenant_fkey", "clips_data", "organizations", ["tenant"], ["tenant"]
    )
    op.add_column(
        "embedding_responses",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE embedding_responses SET tenant = journey_requests.tenant
        FROM journey_requests
        WHERE embedding_responses.request_id = journey_requests.id
        """
    )
    op.create_foreign_key(
        "embedding_responses_tenant_fkey",
        "embedding_responses",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    # No foreign key here because it's huge and we will move it out later
    # no update because we will manually update it
    op.add_column(
        "face_occurrences",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.add_column(
        "journey_responses",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE journey_responses SET tenant = journey_requests.tenant
        FROM journey_requests
        WHERE journey_responses.request_id = journey_requests.id
        """
    )
    op.create_foreign_key(
        "journey_responses_tenant_fkey",
        "journey_responses",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "notification_group_members",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE notification_group_members
        SET tenant = notification_groups.tenant FROM notification_groups
        WHERE notification_group_members.group_id = notification_groups.id
        """
    )
    op.create_foreign_key(
        "notification_group_members_tenant_fkey",
        "notification_group_members",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "shared_archives",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE shared_archives SET tenant = archives.tenant FROM archives
        WHERE shared_archives.archive_id = archives.id
        """
    )
    op.create_foreign_key(
        "shared_archives_tenant_fkey",
        "shared_archives",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "shared_videos",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE shared_videos SET tenant = clips_data.tenant FROM clips_data
        WHERE shared_videos.clip_id = clips_data.id
        """
    )
    op.create_foreign_key(
        "shared_videos_tenant_fkey",
        "shared_videos",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "shared_walls",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE shared_walls SET tenant = walls.tenant FROM walls
        WHERE shared_walls.wall_id = walls.id
        """
    )
    op.create_foreign_key(
        "shared_walls_tenant_fkey",
        "shared_walls",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "text_search_response",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE text_search_response
        SET tenant = text_search_requests.tenant FROM text_search_requests
        WHERE text_search_response.request_id = text_search_requests.id
        """
    )
    op.create_foreign_key(
        "text_search_response_tenant_fkey",
        "text_search_response",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "text_search_response_status",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE text_search_response_status
        SET tenant = text_search_requests.tenant FROM text_search_requests
        WHERE text_search_response_status.request_id = text_search_requests.id
        """
    )
    op.create_foreign_key(
        "text_search_response_status_tenant_fkey",
        "text_search_response_status",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "user_alerts",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE user_alerts
        SET tenant = user_alert_settings.tenant FROM user_alert_settings
        WHERE user_alerts.setting_id = user_alert_settings.id
        """
    )
    op.create_foreign_key(
        "user_alerts_tenant_fkey",
        "user_alerts",
        "organizations",
        ["tenant"],
        ["tenant"],
    )
    op.add_column(
        "wall_tiles",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
    )
    op.execute(
        """
        UPDATE wall_tiles SET tenant = walls.tenant FROM walls
        WHERE wall_tiles.wall_id = walls.id
        """
    )
    op.create_foreign_key(
        "wall_tiles_tenant_fkey", "wall_tiles", "organizations", ["tenant"], ["tenant"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("wall_tiles_tenant_fkey", "wall_tiles", type_="foreignkey")
    op.drop_column("wall_tiles", "tenant")
    op.drop_constraint("user_alerts_tenant_fkey", "user_alerts", type_="foreignkey")
    op.drop_column("user_alerts", "tenant")
    op.drop_constraint(
        "text_search_response_status_tenant_fkey",
        "text_search_response_status",
        type_="foreignkey",
    )
    op.drop_column("text_search_response_status", "tenant")
    op.drop_constraint(
        "text_search_response_tenant_fkey", "text_search_response", type_="foreignkey"
    )
    op.drop_column("text_search_response", "tenant")
    op.drop_constraint("shared_walls_tenant_fkey", "shared_walls", type_="foreignkey")
    op.drop_column("shared_walls", "tenant")
    op.drop_constraint("shared_videos_tenant_fkey", "shared_videos", type_="foreignkey")
    op.drop_column("shared_videos", "tenant")
    op.drop_constraint(
        "shared_archives_tenant_fkey", "shared_archives", type_="foreignkey"
    )
    op.drop_column("shared_archives", "tenant")
    op.drop_constraint(
        "notification_group_members_tenant_fkey",
        "notification_group_members",
        type_="foreignkey",
    )
    op.drop_column("notification_group_members", "tenant")
    op.drop_constraint(
        "journey_responses_tenant_fkey", "journey_responses", type_="foreignkey"
    )
    op.drop_column("journey_responses", "tenant")
    op.drop_column("face_occurrences", "tenant")
    op.drop_constraint(
        "embedding_responses_tenant_fkey", "embedding_responses", type_="foreignkey"
    )
    op.drop_column("embedding_responses", "tenant")
    op.drop_constraint("clips_data_tenant_fkey", "clips_data", type_="foreignkey")
    op.drop_column("clips_data", "tenant")
    op.drop_constraint(
        "archive_comments_tenant_fkey", "archive_comments", type_="foreignkey"
    )
    op.drop_column("archive_comments", "tenant")
    # ### end Alembic commands ###
