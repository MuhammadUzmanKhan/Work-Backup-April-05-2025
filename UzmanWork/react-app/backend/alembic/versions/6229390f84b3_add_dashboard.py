"""add dashboard

Revision ID: 6229390f84b3
Revises: 2025f8f6f133
Create Date: 2024-02-02 17:40:20.258595

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from backend.access_logs.constants import UserActions
from backend.database.migration_utils import TableColumnPair, change_enum_values

# revision identifiers, used by Alembic.
revision = "6229390f84b3"
down_revision = "2025f8f6f133"
branch_labels = None
depends_on = None

OLD_ACTION_NAME_VALUES = [
    x.name
    for x in UserActions
    if x.name not in ("CREATE_DASHBOARD", "DELETE_DASHBOARD")
]

NEW_ACTION_NAME_VALUES = [x.name for x in UserActions]

TABLE_COLUMN_PAIRS = [TableColumnPair("access_logs", "action")]

ENUM_NAME = "useraction"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dashboards",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("owner_user_email", sa.String(), nullable=False),
        sa.Column("creation_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("time_range", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dashboard_metrics",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dashboard_id", sa.Integer(), nullable=False),
        sa.Column("metric_name", sa.String(), nullable=False),
        sa.Column("metric_metadata", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["dashboards.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dashboard_user_preferences",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_email", sa.String(), nullable=False),
        sa.Column("favorite_dashboard_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["favorite_dashboard_id"], ["dashboards.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_email"),
    )
    op.create_table(
        "dashboard_user_view_logs",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_email", sa.String(), nullable=False),
        sa.Column("dashboard_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["dashboards.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_email", "dashboard_id"),
    )
    op.create_table(
        "dashboard_widgets",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dashboard_id", sa.Integer(), nullable=False),
        sa.Column("widget_name", sa.String(), nullable=False),
        sa.Column("metric_id", sa.Integer(), nullable=True),
        sa.Column("widget_metadata", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["dashboards.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["metric_id"], ["dashboard_metrics.id"]),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dashboard_data_sources",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dashboard_id", sa.Integer(), nullable=False),
        sa.Column("mac_address", sa.String(), nullable=False),
        sa.Column(
            "roi_polygon", postgresql.ARRAY(sa.Float(), dimensions=2), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["dashboards.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["mac_address"], ["cameras.mac_address"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("dashboard_id", "mac_address"),
    )
    op.create_table(
        "data_sources_to_widgets",
        sa.Column("tenant", sa.String(), server_default="unassigned", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("widget_id", sa.Integer(), nullable=False),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_source_id"], ["dashboard_data_sources.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.ForeignKeyConstraint(
            ["widget_id"], ["dashboard_widgets.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("widget_id", "data_source_id"),
    )
    change_enum_values(
        table_column_pairs=TABLE_COLUMN_PAIRS,
        enum_name=ENUM_NAME,
        current_values=set(OLD_ACTION_NAME_VALUES),
        new_values=set(NEW_ACTION_NAME_VALUES),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        """
    DELETE FROM access_logs
    WHERE action in (
    'CREATE_DASHBOARD', 'DELETE_DASHBOARD'
    );
    """
    )
    change_enum_values(
        table_column_pairs=TABLE_COLUMN_PAIRS,
        enum_name=ENUM_NAME,
        current_values=set(NEW_ACTION_NAME_VALUES),
        new_values=set(OLD_ACTION_NAME_VALUES),
    )
    op.drop_table("data_sources_to_widgets")
    op.drop_table("dashboard_data_sources")
    op.drop_table("dashboard_widgets")
    op.drop_table("dashboard_user_view_logs")
    op.drop_table("dashboard_user_preferences")
    op.drop_table("dashboard_metrics")
    op.drop_table("dashboards")
    # ### end Alembic commands ###
