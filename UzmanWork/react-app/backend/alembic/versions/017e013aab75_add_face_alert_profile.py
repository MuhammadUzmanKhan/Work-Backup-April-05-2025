"""Add face alert profile

Revision ID: 017e013aab75
Revises: 428f5af167fe
Create Date: 2023-11-22 18:08:23.845272

"""

import sqlalchemy as sa
from alembic import op

from backend.access_logs.constants import UserActions
from backend.database.migration_utils import TableColumnPair, change_enum_values

# revision identifiers, used by Alembic.
revision = "017e013aab75"
down_revision = "428f5af167fe"
branch_labels = None
depends_on = None

OLD_ACTION_NAME_VALUES = [
    x.name
    for x in UserActions
    if x.name not in ("UPDATED_LOCATION_NAME", "VIEWED_LIVE_STREAM")
]

NEW_ACTION_NAME_VALUES = [x.name for x in UserActions]


TABLE_COLUMN_PAIRS = [TableColumnPair("access_logs", "action")]

ENUM_NAME = "useraction"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "license_plate_alert_profiles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("license_plate_number", sa.String(), nullable=False),
        sa.Column("tenant", sa.String(), nullable=False),
        sa.Column("owner_user_email", sa.String(), nullable=False),
        sa.Column("creation_time", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["license_plate_number"], ["license_plates.license_plate_number"]
        ),
        sa.ForeignKeyConstraint(["tenant"], ["organizations.tenant"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("license_plate_number", "tenant"),
    )
    op.create_table(
        "notification_groups_to_license_plate_alert_profiles",
        sa.Column("profile_id", sa.Integer(), nullable=False),
        sa.Column("notification_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification_group_id"], ["notification_groups.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"], ["license_plate_alert_profiles.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("profile_id", "notification_group_id"),
    )
    change_enum_values(
        table_column_pairs=TABLE_COLUMN_PAIRS,
        enum_name=ENUM_NAME,
        current_values=set(OLD_ACTION_NAME_VALUES),
        new_values=set(NEW_ACTION_NAME_VALUES),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("notification_groups_to_license_plate_alert_profiles")
    op.drop_table("license_plate_alert_profiles")
    change_enum_values(
        table_column_pairs=TABLE_COLUMN_PAIRS,
        enum_name=ENUM_NAME,
        current_values=set(NEW_ACTION_NAME_VALUES),
        new_values=set(OLD_ACTION_NAME_VALUES),
    )
    # ### end Alembic commands ###
