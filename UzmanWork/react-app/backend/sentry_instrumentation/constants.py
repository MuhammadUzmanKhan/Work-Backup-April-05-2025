from datetime import timedelta

MIN_SENTRY_REPORT_TIME = timedelta(milliseconds=100)

# App routes
SENTRY_TRACED_ENDPOINTS_APP = [
    "/access_control/assign_camera",
    "/access_control/authorize_alta",
    "/access_control/authorize_brivo",
    "/access_control/brivo/get-api-key",
    "/access_control/brivo/set-api-key",
    "/access_control/integrations/{vendor}",
    "/access_control/set_favorite_camera",
    "/access_control/set_location",
    "/access_control/unassign_camera",
    "/access_control/access_points/actions/unlock",
    "/archive/add_clip/{archive_id}",
    "/archive/clip",
    "/archive/{archive_id}/clip/{clip_id}/thumbnails",
    "/archive/comment",
    "/archive/share",
    "/archive/summary",
    "/archive/unshare/{archive_id}",
    "/archive/update_description/{archive_id}",
    "/archive/update_title/{archive_id}",
    "/archive/user_archives",
    "/archive/{archive_id}",
    "/archive/{archive_id}/comments",
    "/archive/{archive_id}/tags",
    "/tags/",
    "/cameras_registration/candidate_cameras/{location_id}",
    "/cameras_registration/register_candidates/{location_id}",
    "/dashboard/",
    "/dashboard/summary",
    "/dashboard/{dashboard_id}",
    "/dashboard/{dashboard_id}/reports-order",
    "/dashboard/update_user_favorite",
    "/dashboard/reports/",
    "/dashboard/reports/{report_id}",
    "/dashboard/reports/{report_id}/actions/clone",
    "/dashboard/reports/data/{report_id}",
    "/dashboard/reports/actions/data/preview",
    "/devices/create_group",
    "/devices/create_location",
    "/devices/delete_camera",
    "/devices/delete_camera_group",
    "/devices/delete_location/{location_id}",
    "/devices/disable_camera",
    "/devices/enable_camera",
    "/devices/register_nvr",
    "/devices/rename_camera",
    "/devices/update_camera_credentials",
    "/devices/update_camera_flag",
    "/devices/update_camera_group",
    "/devices/update_camera_video_orientation_type",
    "/devices/update_camera_rtsp_url",
    "/devices/update_location_enable_setting_timezone",
    "/devices/update_location_name",
    "/devices/update_nvr_location",
    "/devices/update_location_address",
    "/devices/update_location_timezone",
    "/devices/update_webrtc_bulk_flag",
    "/devices/cameras_export",
    "/devices/nvrs_export",
    "/devices/validate_nvr",
    "/face/upload_face_picture",
    "/face_alert/delete_alert_profile/{alert_profile_id}",
    "/face_alert/register_alert_profile",
    "/face_alert/update_notification_groups/{alert_profile_id}",
    "/face_alert/update_person_of_interest_flag/{alert_profile_id}",
    "/face_alert/update_profile_description/{alert_profile_id}",
    "/face_alert/alert_occurrences/{alert_profile_id}",
    "/face/face_occurrences",
    "/face/unique_faces",
    "/face/track_thumbnail_from_face_occurrence",
    "/face_alert/alert_profile",
    "/face_alert/alert_profiles",
    "/face_alert/latest_person_of_interest_alert_occurrences",
    "/journey/journey_from_track",
    "/kinesis_api/s3_upload_and_fetch",
    "/kiosk/create",
    "/kiosk/delete/{kiosk_id}",
    "/kiosk/regenerate/{kiosk_id}",
    "/kiosk/rename",
    "/kiosk/share",
    "/kiosk/update_status",
    "/kiosk/update_walls",
    "/license_plate_alert/add_alert_profile",
    "/license_plate_alert/delete_alert_profile/{alert_profile_id}",
    "/license_plate_alert/profile_exists/{license_plate_number}",
    "/license_plate_alert/update_notification_groups/{alert_profile_id}",
    "/members/create",
    "/members/delete",
    "/members/list",
    "/members/permanently_delete_own_user",
    "/members/update_user_access_restrictions",
    "/members/update_user_name",
    "/members/update_user_role",
    "/notification_group/delete_group/{group_id}",
    "/notification_group/delete_group_member/{group_member_id}",
    "/notification_group/new_group",
    "/notification_group/new_group_member",
    "/notification_group/rename_group/{group_id}",
    "/notification_group/update_group_member/{group_member_id}",
    "/org_flags/update_org_flag",
    "/organization_alert_subscribers/add",
    "/organization_alert_subscribers/list",
    "/organization_alert_subscribers/remove",
    "/organizations/create_organization",
    "/organizations/update_inactive_user_logout",
    "/organizations/update_low_res_bitrate",
    "/organizations/update_audio_settings",
    "/organizations/update_webrtc_settings",
    "/organizations/update_number_licensed_cameras",
    "/organizations/retrieve_number_licensed_cameras",
    "/organizations/update_network_scan_settings",
    "/perceptions/analytics_query",
    "/retention_management/enforce_retention_detection_events",
    "/retention_management/enforce_retention_face_occurrences",
    "/retention_management/enforce_retention_mct_images",
    "/retention_management/enforce_retention_thumbnails",
    "/shared_videos_public/download/{unique_hash}",
    "/text_search/assistant",
    "/text_search/multi_camera_search",
    "/text_search/single_camera_search",
    "/text_search/perform_single_camera_search",
    "/text_search/perform_multi_camera_search",
    "/thumbnail/timelapse",
    "/user_alerts/create",
    "/user_alerts/delete",
    "/user_alerts/update",
    "/user_alerts/update_setting_name",
    "/user_wall/copy_wall",
    "/user_wall/count",
    "/user_wall/create_wall",
    "/user_wall/delete_wall/{wall_id}",
    "/user_wall/edit_tiles/{wall_id}",
    "/user_wall/is_used_in_kiosk",
    "/user_wall/rename_wall",
    "/user_wall/share_wall",
    "/user_wall/tiles/{wall_id}",
    "/user_wall/unshare_wall",
    "/admin/organisations",
    "/admin/nvrs",
    "/admin/nvrs/{nvr_uuid}/is_nvr_slots_locked",
    "/admin/cameras",
    "/admin/organisations/update_always_on_retention",
    "/admin/nvrs/update_retention",
    "/admin/nvrs/lock_nvr_slots",
    "/admin/nvrs/unlock_nvr_slots",
    "/admin/nvrs/{nvr_uuid}/unassign",
]
SENTRY_IGNORED_ENDPOINTS_APP = [
    "/monitor/backend_health",
    "/kiosk_public/{kiosk_hash}/keep_wall_alive",
    "/kiosk_public/{kiosk_hash}/next_wall",
    "/kiosk_public/{kiosk_hash}",
]
SENTRY_SAMPLED_ENDPOINTS_APP = [
    "/access_control/list_access_points",
    "/access_control/list_events",
    "/access_control/list_integrations",
    "/archive/",
    "/cameras",
    "/cameras/",
    "/cameras/{camera_id}",
    "/cameras/downtime/{camera_id}",
    "/devices/get_camera_pipeline_alerts",
    "/devices/get_recent_camera_pipeline_alerts",
    "/devices/nvrs",
    "/features",
    "/groups",
    "/groups_with_location",
    "/journey/retrieve_tracks_thumbnail",
    "/kinesis_api/abort_clip_upload",
    "/kinesis_api/clip",
    "/kinesis_api/get_clip_upload_request",
    "/kinesis_api/live_data",
    "/kinesis_api/request_live",
    "/kinesis_api_public/getHLSMasterPlaylist.m3u8",
    "/kinesis_api_public/getHLSMediaPlaylist.m3u8",
    "/kinesis_api_public/sign_webrtc_request",
    "/kiosk/",
    "/kiosk_public/{kiosk_hash}/live_data_kiosk",
    "/license_plate/license_plate_occurrences",
    "/license_plate/license_plates",
    "/locations",
    "/monitor/db_health",
    "/monitor/video_stream_alert",
    "/notification_group/",
    "/org_flags/get_org_flag",
    "/organizations",
    "/organizations/access_logs",
    "/organizations/retrieve_network_scan_settings",
    "/perceptions/aggregate",
    "/shared_videos/",
    "/shared_videos/live",
    "/shared_videos_public/exchange/live/{unique_uuid}",
    "/shared_videos_public/exchange/{unique_hash}",
    "/shared_videos_public/info/live/{unique_uuid}",
    "/shared_videos_public/info/{unique_hash}",
    "/shared_videos_public/live/keep_alive/{unique_uuid}",
    "/user_alerts/alert_settings",
    "/user_alerts/alerts",
    "/user_wall/",
    "/thumbnail/most_recent_thumbnail_enlarged",
    "/thumbnail/most_recent_thumbnails",
    "/thumbnail/query_thumbnails_range",
    "/thumbnail/query_thumbnails_timestamps",
    "/versioning/check_frontend_requires_update",
]

SENTRY_ALL_ENDPOINTS_APP = (
    SENTRY_TRACED_ENDPOINTS_APP
    + SENTRY_IGNORED_ENDPOINTS_APP
    + SENTRY_SAMPLED_ENDPOINTS_APP
)

# Edge routes
SENTRY_TRACED_ENDPOINTS_EDGE = [
    "/kinesis_api/register_clip_uploads",
    "/face_edge/merge_faces",
    "/face_edge/register_uploaded_face_processed",
    "/journey/register_embedding_response",
    "/journey/register_journey_response",
    "/text_search/register_response",
    "/stream_discovery/sync",
]
SENTRY_IGNORED_ENDPOINTS_EDGE = [
    "/monitor/camera_pipeline_alert",
    "/stream_discovery/status/{nvr_uuid}",
    "/perceptions/",
    "/thumbnail/register_thumbnails",
    "/monitor/update_timezone",
    "/monitor/edge_health",
    "/journey/register_mct_images",
]
SENTRY_SAMPLED_ENDPOINTS_EDGE = [
    "/face_edge/register_faces",
    "/monitor/edge_camera_alert",
    "/license_plate/register_image",
    "/monitor/nvr_heartbeat",
    "/monitor/edge_status_update",
    "/monitor/internet_status",
    "/journey/embedding_websocket",
    "/journey/journey_websocket",
    "/text_search/",
    "/escapi/",
    "/stream_discovery/upload",
]

SENTRY_ALL_ENDPOINTS_EDGE = (
    SENTRY_TRACED_ENDPOINTS_EDGE
    + SENTRY_IGNORED_ENDPOINTS_EDGE
    + SENTRY_SAMPLED_ENDPOINTS_EDGE
)


# NOTE(@lberg): we probably have more which are not listed here
SENTRY_SAMPLED_PERIODIC_TASKS = [
    "backend.task_worker.periodic_task.periodic_match_do_not_enter_alerts",
    "backend.task_worker.periodic_task.periodic_match_idling_alerts",
    "backend.task_worker.periodic_task.periodic_update_backend_status",
    "backend.task_worker.periodic_task.check_thumbnail_stream_health",
    "backend.task_worker.periodic_task.check_system_health",
    "backend.task_worker.periodic_task.check_perception_service_health",
]


SENTRY_ALL_IGNORED = set(SENTRY_IGNORED_ENDPOINTS_APP + SENTRY_IGNORED_ENDPOINTS_EDGE)
SENTRY_ALL_SAMPLED = set(
    SENTRY_SAMPLED_PERIODIC_TASKS
    + SENTRY_SAMPLED_ENDPOINTS_APP
    + SENTRY_SAMPLED_ENDPOINTS_EDGE
)
